{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto/./src/utils/utils.js","webpack://mesto/./src/components/Card.js","webpack://mesto/./src/components/FormValidator.js","webpack://mesto/./src/components/Section.js","webpack://mesto/./src/components/Popup.js","webpack://mesto/./src/components/PopupWithImage.js","webpack://mesto/./src/components/UserInfo.js","webpack://mesto/./src/components/PopupWithForm.js","webpack://mesto/./src/components/PopupWithConfirmation.js","webpack://mesto/./src/components/Api.js","webpack://mesto/./src/pages/index.js"],"sourcesContent":["const selectors = {\n  selectorForm: '.popup__form',\n  selectorInput: '.popup__input',\n  selectorButton: '.popup__button',\n  selectorError: '.popup__error',\n  classButtonDisabled: 'popup__button_disabled',\n  classInputTypeError: 'popup__input_type_error',\n  classErrorVisible: 'popup__error_visible'\n}\n\nconst template = \"#template-element\";\n\n// ПОПАП редактирования профиля--------------------------------------------------------------------------------------\n//переменная хранит попап редактирования профиля\nconst popupProfileChanger = document.querySelector(\".popup_profile-changer\");\n//кнопка закрытия попапа редактирования профиля\n//кнопка открытия попапа редактирования профиля\nconst popupOpenButtonElement = document.querySelector(\".profile__edit-button\");\n// форма редактирования профиля\nconst formElementProfileChanger = popupProfileChanger.querySelector(\".popup__form\");\n// инпуты формы редактирования профиля\nconst popupTextName = formElementProfileChanger.querySelector(\".popup__input_text_name\");\nconst popupTextJob = formElementProfileChanger.querySelector(\".popup__input_text_job\");\n\n// ПОПАП ДОБАВЛЕНИЯ НОВОЙ КАРТОЧКИ-----------------------------------------------------------------------------------\n//переменная хранит попап добавления новой картинки\nconst popupAddNewCard = document.querySelector(\".popup_add-new-card\");\n//кнопка открытия попапа добавления карточки\nconst popupAddNewCardOpenButton = document.querySelector(\".profile__add-button\");\n// форма редактирования профиля\nconst formElementAddNewCard = popupAddNewCard.querySelector(\".popup__form\");\n\n\n\n// ПОПАП аватара-----------------------------------------------------------------------------------\nconst popupAvatarPhoto = document.querySelector('.profile__edit-avatar');\nconst popupAvatarChangerOpen = document.querySelector('.popup_avatar-changer');\nconst formElementAvatarChanger = popupAvatarChangerOpen.querySelector(\".popup__form\");\nconst avatarImage = document.querySelector('.profile__avatar');\n\n\n//ОБЩИЕ\nconst popupsList = Array.from(document.querySelectorAll(\".popup\"));\nconst popupTemplateList = Array.from(document.querySelectorAll('.popup__form'));\n\nconst profileName = document.querySelector('.profile__profile-name');\nconst profileAbout = document.querySelector('.profile__profile-job');\nconst profileAvatar = document.querySelector('.profile__avatar');\n\nconst formValidatorList = {};\n\n\n\nexport {selectors, template, popupOpenButtonElement, formElementProfileChanger, popupTextName, popupTextJob, popupAddNewCardOpenButton, formElementAddNewCard, popupsList, popupTemplateList, formValidatorList, profileName, profileAbout, profileAvatar, popupAvatarPhoto, formElementAvatarChanger, avatarImage};\n","export default class Card {\n  constructor(data, templateSelector, handleCardClick, handleCardDelete, handlePutLike, handleDeleteLike, ownerId) {\n    this._data = data;\n    this._name = data['name'];\n    this._link = data['link'];\n    this._likes = data['likes'];\n    this._id = data['_id'];\n    this._templateSelector = templateSelector;\n    this._handleCardClick = handleCardClick;\n    this._handleCardDelete = handleCardDelete;\n    this._handlePutLike = handlePutLike;\n    this._handleDeleteLike = handleDeleteLike;\n    this._ownerId = ownerId;\n  }\n\n  _getTemplate() {\n    this._cardTemplate = document.querySelector(this._templateSelector).content.querySelector(\".template-element\").cloneNode(true);\n    return this._cardTemplate;\n  }\n\n  _setEventListeners() {\n    this._buttonLike.addEventListener(\"click\", () => this._likeCard());\n    if (this._buttonDelete !== null) {\n      this._buttonDelete.addEventListener(\"click\", () => {\n        /* if (this._handleCardDelete()) {\n          this._deleteCard();\n        } */\n        this._handleCardDelete(this);\n\n      });\n    }\n    this._elementTopSide.addEventListener(\"click\", () => this._handleCardClick(this._data));\n  }\n  _likeCard() {\n    this._buttonLike.classList.toggle(\"elements__button-like_active\");\n    if (this._buttonLike.classList.contains('elements__button-like_active')) {\n      this._handlePutLike(this._id);\n      this._likeNumber.textContent = Number(this._likeNumber.textContent) + 1;\n    } else {\n      this._handleDeleteLike(this._id);\n      this._likeNumber.textContent = Number(this._likeNumber.textContent) - 1;\n    }\n  }\n\n  deleteCard() {\n    this._element.remove();\n    this._element = null;\n  }\n\n /*  _isLiked(data) {\n    // console.log(data['_id']);\n    return data['_id'] === this._ownerId;\n  } */\n\n  _isMine() {\n    return this._data.owner['_id'] === this._ownerId;\n  }\n\n  generateCard() {\n    this._element = this._getTemplate();\n    this._buttonLike = this._element.querySelector(\".elements__button-like\");\n    this._buttonDelete = this._element.querySelector(\".elements__button-delete\");\n    this._elementTopSide = this._element.querySelector(\".elements__top-side\");\n    this._element.querySelector(\".elements__caption\").textContent = this._name;\n    this._elementTopSide.src = this._link;\n    this._elementTopSide.alt = `Фото - ${this._name}`;\n\n    this._likeNumber = this._element.querySelector('.elements__like-number');\n    this._likeNumber.textContent = this._likes.length;\n\n    if (this._likes.some(like => like._id === this._ownerId)) {\n      this._buttonLike.classList.add('elements__button-like_active');\n    }\n\n    if(!this._isMine()) {\n      this._buttonDelete.remove();\n    }\n\n    this._setEventListeners();\n    return this._element;\n  }\n}\n","export default class FormValidator {\n  constructor(formElement, selectors) {\n    this._formElement = formElement;\n    this._selectors = selectors;\n    this._selectorInput = selectors.selectorInput;\n    this._selectorButton= selectors.selectorButton;\n    this._selectorError = selectors.selectorError;\n    this._classButtonDisabled = selectors.classButtonDisabled;\n    this._classInputTypeError = selectors.classInputTypeError;\n    this._classErrorVisible = selectors.classErrorVisible;\n    this._buttonElement = this._formElement.querySelector(this._selectorButton);\n    this._inputList = Array.from(this._formElement.querySelectorAll(this._selectorInput));\n  }\n\n//отдельная функция удаления ошибок валидации\n  deleteValidityErrors() {\n    this._inputList.forEach((inputElement) => {\n      this._hideErrorMessage(inputElement);\n    });\n  }\n\n  disableButtonSubmit() {\n    this._buttonElement.setAttribute(\"disabled\", true);\n    this._buttonElement.classList.add(this._classButtonDisabled);\n  }\n\n  enableValidation() {\n    this._inputList.forEach((inputElement) => {\n      inputElement.addEventListener('input', () => {\n        this._isInputValid(inputElement);\n        this._toggleButtonSubmit();\n      });\n    });\n  }\n\n  _isInputValid (inputElement) {\n    if (!inputElement.validity.valid) {\n      this._showErrorMessage(inputElement);\n    } else {\n      this._hideErrorMessage(inputElement);\n    }\n  }\n\n  _showErrorMessage(inputElement) {\n    this._popupError = this._formElement.querySelector(`.${inputElement.name}-error`)\n    inputElement.classList.add(this._classInputTypeError);\n    // debugger;\n    this._popupError.textContent = inputElement.validationMessage;\n    this._popupError.classList.add(this._classErrorVisible);\n  }\n\n  _hideErrorMessage(inputElement) {\n    this._popupError = this._formElement.querySelector(`.${inputElement.name}-error`)\n    inputElement.classList.remove(this._classInputTypeError);\n    //debugger;\n    this._popupError.textContent = \"\";\n    this._popupError.classList.remove(this._classErrorVisible);\n  }\n\n  _toggleButtonSubmit() {\n    if (this._isFormInputsValid()) {\n      this.disableButtonSubmit();\n    } else {\n      this._buttonElement.removeAttribute(\"disabled\");\n      this._buttonElement.classList.remove(this._classButtonDisabled);\n    }\n  }\n\n  _isFormInputsValid() {\n    return this._inputList.some(inputElement => {\n      return !inputElement.validity.valid;\n    });\n  }\n}\n","export default class Section {\n  constructor({ items, renderItems }, selector) {\n    this._items = items;\n    this._renderItems = renderItems;\n    this._selector = selector;\n    this._elementContainer = document.querySelector(this._selector);\n  }\n\n  renderItems() {\n    this._items.slice().reverse().forEach(item => this._renderItems(item));\n  }\n\n  addItem(element) {\n    this._elementContainer.prepend(element);\n  }\n}\n","export default class Popup {\n  constructor(selector) {\n    this._popup = document.querySelector(selector);\n    this._buttonClose = this._popup.querySelector('.popup__close');\n    this._handleEscClose = this._handleEscClose.bind(this);\n  }\n\n  open() {\n    this._popup.classList.add(\"popup_opened\");\n    document.addEventListener('keydown', this._handleEscClose);\n  }\n\n  close() {\n    this._popup.classList.remove(\"popup_opened\");\n    document.removeEventListener('keydown', this._handleEscClose);\n  }\n\n  _handleEscClose(evt) {\n    if (evt.key === \"Escape\") this.close();\n  }\n\n  setEventListeners() {\n    this._buttonClose.addEventListener('click', () => this.close());\n    this._popup.addEventListener('click', evt => {\n      if (evt.target.classList.contains(\"popup\")) {\n        this.close();\n      }\n    });\n  }\n}\n","import Popup from \"./Popup.js\";\n\nexport default class PopupWithImage extends Popup {\n  constructor(selector) {\n    super(selector);\n    this._popupPhotoRevealImageBig = this._popup.querySelector(\".popup__image-big\");\n    this._popupPhotoRevealImageCaption = this._popup.querySelector(\".popup__image-caption\");\n    }\n  open(data) {\n    this._popupPhotoRevealImageBig.src = data['link'];\n    this._popupPhotoRevealImageCaption.textContent = data['name'];\n    this._popupPhotoRevealImageBig.alt = `Фото в увеличенном виде - ${data['link']}`;\n    super.open();\n  }\n}\n","export default class UserInfo {\n  constructor({ selectorName, selectorInfo, selectorAvatar }) {\n    this._profileName = document.querySelector(selectorName);\n    this._profileJob = document.querySelector(selectorInfo);\n    this._profileAvatar = document.querySelector(selectorAvatar);\n  }\n\n  getUserInfo() {\n    const userInfo ={};\n    userInfo.name = this._profileName.textContent;\n    userInfo.info = this._profileJob.textContent;\n    return userInfo;\n  }\n\n  setUserInfo( {userName, userInfo, userAvatar} ) {\n    if(userName) {\n      this._profileName.textContent = userName;\n    }\n    if(userInfo) {\n      this._profileJob.textContent = userInfo;\n    }\n    if(userAvatar) {\n      this._profileAvatar.src = userAvatar;\n    }\n  }\n}\n","import Popup from \"./Popup.js\";\n\nexport default class PopupWithForm extends Popup {\n  constructor(selector, submitForm) {\n    super(selector);\n    this._submitForm = submitForm;\n    this._formElement = this._popup.querySelector(\".popup__form\");\n    this._inputList = Array.from(this._popup.querySelectorAll(\".popup__input\"));\n    this._button = this._formElement.querySelector('.popup__button');\n  }\n\n  close() {\n    super.close();\n    this._formElement.reset();\n  }\n\n  _getInputValues() {\n    this._objWithInfo = {};\n    this._inputList.forEach( input => {\n      this._objWithInfo[input.name] = input.value;\n    });\n    return this._objWithInfo;\n  }\n\n  setEventListeners() {\n    super.setEventListeners();\n    this._formElement.addEventListener(\"submit\", (evt) => {\n      evt.preventDefault();\n      this._submitForm(this._getInputValues());\n    });\n  }\n\n  downloadButton(flag) {\n    if(flag) {\n      this._button.textContent = 'Сохранение...';\n    } else {\n      this._button.textContent = 'Сохранить';\n    }\n  }\n}\n","import Popup from \"./Popup\";\n\nexport default class PopupWithConfirmation extends Popup {\n  constructor(selector) {\n    super(selector);\n    this._formElement = this._popup.querySelector(\".popup__form\");\n  }\n\n  setEventListeners(submitHandler) {\n    super.setEventListeners();\n    this._formElement.addEventListener(\"submit\", (evt) => {\n      evt.preventDefault();\n      submitHandler();\n    });\n  }\n}\n","export default class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n_checkStatus(status) {\n    if(status.ok) {\n      return status.json();\n    } else {\n      return Promise.reject(\"Произошла ошибка\");\n    }\n  }\n\n  getUserInfoServer() {\n    return fetch(`${this._url}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => {\n     return this._checkStatus(res);\n    });\n  }\n\n  getCardsServer() {\n    return fetch(`${this._url}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => {\n      return this._checkStatus(res);\n    });\n  }\n\n  setUserInfoServer(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data['popup-text-name'],\n        about: data['popup-text-job']\n      })\n    }).then(res => {\n      return this._checkStatus(res);\n    });\n  }\n\n  setUserAvatarServer(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data\n      })\n    }).then(res => {\n      return this._checkStatus(res);\n    });\n  }\n\n  postNewCardServer(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(res => {\n      return this._checkStatus(res);\n    });\n  }\n\n  postLikeServer(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => {\n      return this._checkStatus(res);\n    });\n  }\n\n  deleteLikeServer(cardId) {\n    return fetch(`${this._url}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._checkStatus(res);\n    });\n  }\n\n  deleteCardServer(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._checkStatus(res);\n    });\n  }\n\n}\n","import './index.css';\n\nimport {selectors, template, popupOpenButtonElement, formElementProfileChanger, popupTextName, popupTextJob, popupAddNewCardOpenButton, formElementAddNewCard, popupTemplateList, formValidatorList, profileName, profileAbout, profileAvatar, popupAvatarPhoto, formElementAvatarChanger, avatarImage} from '../utils/utils';\nimport Card from '../components/Card';\nimport FormValidator from '../components/FormValidator';\nimport Section from '../components/Section';\nimport PopupWithImage from '../components/PopupWithImage';\nimport UserInfo from '../components/UserInfo';\nimport PopupWithForm from '../components/PopupWithForm';\nimport PopupWithConfirmation from '../components/PopupWithConfirmation';\nimport Api from '../components/Api';\n\n// ПОПАП редактирования профиля--------------------------------------------------------------------------------------\n// Делаем попап редактирования профиля: открытие попапа, закрытие попапа\n\n//Слушатели на открытие и закрытие попапа редактирования профиля\npopupOpenButtonElement.addEventListener(\"click\", () => {\n  const formUserInfo = userInformation.getUserInfo();\n  popupTextName.value = formUserInfo.name;\n  popupTextJob.value = formUserInfo.info;\n  formValidatorList[formElementProfileChanger.name].deleteValidityErrors();\n  formValidatorList[formElementProfileChanger.name].disableButtonSubmit();\n  formProfileChanger.open();\n});\nfunction submitFormProfileChanger(data) {\n  formProfileChanger.downloadButton(true);\n  api.setUserInfoServer(data)\n  .then(() => {\n    userInformation.setUserInfo( {userName: data['popup-text-name'], userInfo: data['popup-text-job']} );\n    formProfileChanger.close();\n  }).catch(err => {\n    console.log(err);\n  }).finally(() => {\n    formProfileChanger.downloadButton(false);\n  });\n};\n//-------------------------------------------------------------------------------------------------------------------\n\n// ПОПАП ДОБАВЛЕНИЯ НОВОЙ КАРТОЧКИ-----------------------------------------------------------------------------------\n// Делаем попап добавления новой карточки: открытие попапа, закрытие попапа\n\npopupAddNewCardOpenButton.addEventListener(\"click\", () => {\n  formValidatorList[formElementAddNewCard.name].deleteValidityErrors();\n  formValidatorList[formElementAddNewCard.name].disableButtonSubmit();\n  formAddNewCard.open();\n});\n\n// const cardsList = new Section( {}, \".elements__list\");\n\n//функция подтверждения добавления новой карточки\nfunction submitFormAddNewCard(data) {\n  formAddNewCard.downloadButton(true);\n  api.postNewCardServer(data)\n  .then(res => {\n    const newCard = new Section({\n      items: res\n    }, \".elements__list\");\n    newCard.addItem(createCard(res));\n    formAddNewCard.close();\n  }).catch(err => {\n    console.log(err);\n  }).finally(() => {\n    formAddNewCard.downloadButton(false);\n  });\n};\n\n// ПОПАП ЗАМЕНЫ АВАТАРА-----------------------------------------------------------------------------------\n\npopupAvatarPhoto.addEventListener('click', () => {\n  formValidatorList[formElementAvatarChanger.name].deleteValidityErrors();\n  formValidatorList[formElementAvatarChanger.name].disableButtonSubmit();\n  formAvatarChanger.open();\n});\n\nfunction submitFormAvatarChanger(data) {\n  formAvatarChanger.downloadButton(true);\n  api.setUserAvatarServer(data['link-avatar'])\n  .then(() => {\n    userInformation.setUserInfo( {userAvatar: data['link-avatar']} );\n    formAvatarChanger.close();\n  }).catch(err => {\n    console.log(err);\n  }).finally(() => {\n    formAvatarChanger.downloadButton(false);\n  })\n}\n\n// функция создания карточки\nfunction createCard(element, ownerId) {\n  const cardsDefault = new Card (element, template, handleCardClick, handleCardDelete, handlePutLike, handleDeleteLike, ownerId);\n  const cardElement = cardsDefault.generateCard();\n  return cardElement;\n}\n\nconst handleCardClick = (data) => {\n  popupWithImage.open(data);\n}\n\nconst handleCardDelete = (card) => {\n  popupWithConfirmation.open();\n  popupWithConfirmation.setEventListeners(() => {\n    api.deleteCardServer(card['_id'])\n    .then(() => {\n    card.deleteCard();\n    popupWithConfirmation.close();\n  }).catch(err => {\n    console.log(err);\n  });\n  });\n}\n\nconst handlePutLike = (data) => {\n  api.postLikeServer(data)\n  .catch(err => {\n    console.log(err);\n  })\n}\n\nconst handleDeleteLike = (data) => {\n  api.deleteLikeServer(data)\n  .catch(err => {\n    console.log(err);\n  })\n}\n\n// инициализируем валидацию в каждой форме и запускаем\npopupTemplateList.forEach(item => {\n  formValidatorList[item.name] = new FormValidator(item, selectors);\n  formValidatorList[item.name].enableValidation();\n});\n\n// инициализируем класс отображения информации о пользователе\nconst userInformation = new UserInfo({selectorName: '.profile__profile-name', selectorInfo: '.profile__profile-job', selectorAvatar: '.profile__avatar'});\n\n// инициализируем попап открытия картинки\nconst popupWithImage = new PopupWithImage(\".popup_photo\");\npopupWithImage.setEventListeners();\n\n// инициализируем попап добавления карточки\nconst formAddNewCard = new PopupWithForm(\".popup_add-new-card\", submitFormAddNewCard);\nformAddNewCard.setEventListeners();\n\n// инициализируем попап редактирования профиля\nconst formProfileChanger = new PopupWithForm(\".popup_profile-changer\", submitFormProfileChanger);\nformProfileChanger.setEventListeners();\n\n// инициализируем попап редактирования аватарки\nconst formAvatarChanger = new PopupWithForm(\".popup_avatar-changer\", submitFormAvatarChanger);\nformAvatarChanger.setEventListeners();\n\nconst popupWithConfirmation = new PopupWithConfirmation(\".popup_submit\");\n\nconst api = new Api ({\n  url: 'https://nomoreparties.co/v1/cohort-57',\n  headers: {\n    authorization: '4873e823-ccc0-45af-addc-f805bcf9ef38',\n    'Content-Type': 'application/json'\n  }\n});\n\nPromise.all( [api.getUserInfoServer(), api.getCardsServer()] )\n.then(data => {\n  userInformation.setUserInfo( {userName: data[0].name, userInfo: data[0].about, userAvatar: data[0].avatar} );\n  const allCards = new Section({\n    items: data[1],\n    renderItems: (item) => {\n      // console.log(item);\n      allCards.addItem(createCard(item, data[0]._id));\n    }\n    }, \".elements__list\");\n  allCards.renderItems();\n});\n\n/*\n//загрузка и установка инфы о пользователе\napi.getUserInfoServer().then(data => {\n  userInformation.setUserInfo( {userName: data.name, userInfo: data.about, userAvatar: data.avatar} );\n}).catch(err => console.log(err));\n\n// console.log(currentUserId);\n\n//загрузка карточек с сервера\napi.getCardsServer().then(data => {\n  const allCards = new Section({\n    items: data,\n    renderItems: (item) => {\n      allCards.addItem(createCard(item));\n    }\n    }, \".elements__list\");\n  allCards.renderItems();\n}).catch(err => console.log(err)); */\n"],"names":["selectors","selectorForm","selectorInput","selectorButton","selectorError","classButtonDisabled","classInputTypeError","classErrorVisible","popupProfileChanger","document","querySelector","popupOpenButtonElement","formElementProfileChanger","popupTextName","popupTextJob","popupAddNewCard","popupAddNewCardOpenButton","formElementAddNewCard","popupAvatarPhoto","formElementAvatarChanger","popupTemplateList","Array","from","querySelectorAll","formValidatorList","Card","data","templateSelector","handleCardClick","handleCardDelete","handlePutLike","handleDeleteLike","ownerId","this","_data","_name","_link","_likes","_id","_templateSelector","_handleCardClick","_handleCardDelete","_handlePutLike","_handleDeleteLike","_ownerId","_cardTemplate","content","cloneNode","_buttonLike","addEventListener","_likeCard","_buttonDelete","_elementTopSide","classList","toggle","contains","_likeNumber","textContent","Number","_element","remove","owner","_getTemplate","src","alt","length","some","like","add","_isMine","_setEventListeners","FormValidator","formElement","_formElement","_selectors","_selectorInput","_selectorButton","_selectorError","_classButtonDisabled","_classInputTypeError","_classErrorVisible","_buttonElement","_inputList","forEach","inputElement","_hideErrorMessage","setAttribute","_isInputValid","_toggleButtonSubmit","validity","valid","_showErrorMessage","_popupError","name","validationMessage","_isFormInputsValid","disableButtonSubmit","removeAttribute","Section","selector","items","renderItems","_items","_renderItems","_selector","_elementContainer","slice","reverse","item","element","prepend","Popup","_popup","_buttonClose","_handleEscClose","bind","removeEventListener","evt","key","close","target","PopupWithImage","_popupPhotoRevealImageBig","_popupPhotoRevealImageCaption","UserInfo","selectorName","selectorInfo","selectorAvatar","_profileName","_profileJob","_profileAvatar","userInfo","info","userName","userAvatar","PopupWithForm","submitForm","_submitForm","_button","reset","_objWithInfo","input","value","preventDefault","_getInputValues","flag","PopupWithConfirmation","submitHandler","Api","config","_url","url","_headers","headers","status","ok","json","Promise","reject","fetch","method","then","res","_checkStatus","body","JSON","stringify","about","avatar","link","cardId","createCard","generateCard","formUserInfo","userInformation","getUserInfo","deleteValidityErrors","formProfileChanger","open","formAddNewCard","formAvatarChanger","popupWithImage","card","popupWithConfirmation","setEventListeners","api","deleteCardServer","deleteCard","catch","err","console","log","postLikeServer","deleteLikeServer","enableValidation","downloadButton","postNewCardServer","addItem","finally","setUserInfoServer","setUserInfo","setUserAvatarServer","authorization","all","getUserInfoServer","getCardsServer","allCards"],"sourceRoot":""}